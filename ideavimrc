set showmode
set showcmd
set visualbell

" Switch to last used buffer
set ideamarks
nnoremap <tab> :e#<CR>
" Exit normal mode
inoremap jj <Esc>
inoremap jk <Esc>
" Unload buffer
nnoremap <Leader>bd :bd<CR>

" Leader
let mapleader = " "
" nnoremap <Space> <Nop>

" comments
map <leader>/ <action>(CommentByLineComment)

" Window splits
map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)

" Open NERDTree (use q to exit)
set nerdtree
map <leader>pv :NERDTreeToggle<CR>

" telescope like searches
map <leader>ff <action>(GotoFile)
map <leader>fg <action>(FindInPath)
map <leader>fa <action>(SearchEverywhere)

" File navigation
map <leader><leader> <Action>(RecentFiles)

" harpoon
" add file to an empty harpoon slot
map <leader>m <Action>(AddToHarpoon) 
map <leader>j <Action>(GotoHarpoon1)
map <leader>k <Action>(GotoHarpoon2)
map <leader>l <Action>(GotoHarpoon3)
map <leader>; <Action>(GotoHarpoon4)

" Close active tab
map <leader>q <action>(CloseContent)

" Go to code
map <leader>af <action>(ShowIntentionActions)
map <leader>rn <Action>(RenameElement)

" Line Numbers ------------------------------------------------------{{{
" Use relativenumbers to use commands for multiple lines way faster
" For the current line print the absolute linenumber instead of a
" useless 0
set relativenumber
set number
" -------------------------------------------------------------------}}}

" Move Blocks -------------------------------------------------------{{{
nnoremap <Down> :m .+1<CR>==
nnoremap <Up> :m .-2<CR>==
inoremap <s-Down> <Esc>:m .+1<CR>==gi
inoremap <s-Up> <Esc>:m .-2<CR>==gi
vnoremap <Down> :m '>+1<CR>gv=gv
vnoremap <Up> :m '<-2<CR>gv=gv
" -------------------------------------------------------------------}}}

" Move rows instead of lines for wrapped lines
nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k

" Move Tabs ---------------------------------------------------------{{{
map <Leader>p <esc>:tabprevious<CR>
map <Leader>n <esc>:tabnext<CR>
" -------------------------------------------------------------------}}}

" Newline -----------------------------------------------------------{{{
" Newline with enter
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>
imap <C-j> <Enter>
" -------------------------------------------------------------------}}}

" Open Files --------------------------------------------------------{{{
" map <Leader>e :e <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>s :spli <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>v :vnew <C-R>=expand("%:p:h") . '/'<CR>
" -------------------------------------------------------------------}}}

" <TAB>: completion.
inoremap <silent><expr> <TAB>
\ ddc#map#pum_visible() ? '<C-n>' :
\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
\ '<TAB>' : ddc#map#manual_complete()

" <S-TAB>: completion back.
inoremap <expr><S-TAB>  ddc#map#pum_visible() ? '<C-p>' : '<C-h>'
" ---------------------------------------------------------------------}}}

" Reload ------------------------------------------------------------{{{
" Automatically reload files changed outside of vim
set autoread

" Allow saving of files as sudo
cmap w!! w !sudo tee > /dev/null %
" -------------------------------------------------------------------}}}

" Scrolling ---------------------------------------------------------{{{
set scrolloff=8         "Start scrolling before reaching the end
set sidescrolloff=15
set sidescroll=1
" -------------------------------------------------------------------}}}

" Search ------------------------------------------------------------{{{
set ignorecase
set smartcase
set hlsearch
" Clear search highlights
noremap <C-l> :nohls<CR>
" Keep search matches in the middle of the window.
nnoremap n nzzzv
nnoremap N Nzzzv
" -------------------------------------------------------------------}}}

" Splits ------------------------------------------------------------{{{
" Open to right and bottom
set splitbelow
set splitright
" Resize, width, heigt or normalize

" Tab ---------------------------------------------------------------{{{
" Use 4 spaces instead of a tab.
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab
" -------------------------------------------------------------------}}}

" Tab Completion ----------------------------------------------------{{{
" Make tab completion for files/buffers act like bash
set wildmode=full
set wildmenu
" -------------------------------------------------------------------}}}

" Timeout -----------------------------------------------------------{{{
set notimeout
set ttimeout
set timeoutlen=10
" -------------------------------------------------------------------}}}

" Undo --------------------------------------------------------------{{{
set undofile
set undodir=~/.config/nvim/tmp
set undoreload=10000
set undolevels=10000
" Remap U to <C-r> for easier redo
nnoremap U <C-r>
" -------------------------------------------------------------------}}}

" Wrap Line ---------------------------------------------------------{{{
set tw=120   " width of document (used by gd)
set nowrap  "don't automatically wrap on load
" set fo-=t   " don't automatically wrap text when typing
set colorcolumn=120
:set showbreak=â†³\ \ \
" -------------------------------------------------------------------}}}

" Insert Mode -------------------------------------------------------{{{
imap <c-del> <esc>d e
imap <c-y> <esc>dd i
inoremap <c-cr> <esc>o
imap <c-d> <esc>yy p i
" -------------------------------------------------------------------}}}
